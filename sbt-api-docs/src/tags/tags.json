[
  {
    "name": "Basic SBT API Workflow",
    "description": "**A quick guide to using SBT APIs**\n\n![Basic API Flow](images/workflow-diagram-06022025-KSK.png)\n\nFollowing the procedure below ensures a correct API implementation which avoids the most common problems, pitfalls, gotchas, and prevents future issues.\n\n*Follow this procedure for every phone number, every time.*\n\n**1. Get a Token**\n\nTokens are good for one hour. Cache the token and use it for all API requests until it expires. SBT does not support refresh tokens.\n\nOptions for handling token expiry:\n* Time-Based: Request a new token before the current token expires. Example: Every 55 minutes.\n* Event-Based: Write code which handles 401 Unauthorized errors by requesting a new token.\n\n**2. Get Subscriber Status**\n\nCall this API *first*, every time. Based on the status received, do the following:\n* Active: Send messages to this number.\n* Inactive: Do not send messages to this number.\n* UnderVerification: Do nothing until the subscriber must respond with a keyword or correct PIN. The subscriber has been sent that information but has not yet responded.\n* Not a Subscriber: Go to Number 3 below.\n\n**3. Get Phone Numbers Data**\n\nThis API determines if a number is a mobile or a landline.\n\nIf the data.type is Mobile, do the following:\n* Use the Add Subscriber to a Group or Add Subscriber to a Brand APIs to opt in the subscriber. \n* Note: Add Subscriber to a Group opts in the subscriber to Marketing or Non-Marketing messages. Use Add Subscriber to a Brand to opt in a subscriber to both Marketing and Non-Marketing messages.\n\nIf the data.type is *not* Mobile, the number is a Landline.\n* *Do not* attempt to add this number. The attempt will fail.\n* *Do not* attempt to message the number. Messaging will result in a StopFail and may cost a usage credit.\n* *Update* any records to show that the number is not Mobile and not eligible for messaging.\n\n**Five Important Takeaways**\n* Fetch a token when needed and use it for one hour.\n* Use Get Subscriber Status for every number, every time.\n* Get Phone Numbers Data is only required once per number.\n* Do not use the Add Subscriber APIs with non-mobile numbers.\n* Do not use the Add Subscriber APIs before attempting to send messages."
  },
  {
    "name": "Endpoint URLs",
    "description": "Purpose | URL\n-|-\nStaging and Integration | https://t2c-api-stage.solutionsbytext.com \nProduction | https://t2c-api.solutionsbytext.com"
  },
  {
    "name": "Authentication",
    "description": "The Solutions By Text 2.0 platform uses the industry-standard OAuth 2.0 authentication protocol. The protocol flow, with specifics for the SBT process:\n\n![Authentication Flow](images/OAuth-01.png)\n\nMore details:\n1. The Authorization Request is an implicit part of the account setup process with SBT.\n2. In the Authorization Grant, SBT’s Client Services team creates a set of credentials. These credentials are a Client ID and Client Secret, which the Client uses for the next step. The Client ID and Client Secret are much like a username and password.\n3. The Client authenticates with the Authorization Server using the Client ID and Client Secret provided by SBT.\n4. The Authorization Server authenticates the Client, validates the Client ID and Client Secret, and issues an Access Token.\n5. The Client requests access to the Resource Server by presenting the Access Token.\n6. The Resource Server validates the Access Token and serves the Client’s request.\n\n**Token URLs**\n\nPurpose | URL\n-|-\nStaging and Integration | https://login-stage.solutionsbytext.com/connect/token \nProduction | https://login.solutionsbytext.com/connect/token\n\nJSON response:\n\n```\naccess_token: string,\nexpires_in: string,\ntoken_type: Bearer,\nscope: array\n```\n\nName | Type | Description\n-|-|-\naccess_token | String | The token string; it has no defined maximum length.\nexpires_in | Integer | Time in seconds to expiration of the access token.\ntoken_type | String | Bearer\nscope | Array of strings | Space-delimited strings, represents the operations allowed by the access_token.\n\n**IMPORTANT**\n* Access Tokens expire after one hour (3,600 seconds).\n* SBT does not support refresh tokens.\n\n**Token Management Best Practices**\n* Generate an access token once an hour per API key; that is SBT's preferred practice.\n* *Do not generate a new token for each API request.* Doing so causes unnecessary work for customer organizations, places stress on the authentication server, and is not scalable.\n* When tokens expire, simply fetch a new token.\n* SBT recommends a persistent token cache, especially for customers using multiple services (example: Lambda/serverless functions).\n* The API client should be tolerant of token expiry during execution. The client should be able to fetch a new token and continue execution without failure.\n* Multiple tokens may be generated in an hour, up to a reasonable limit (5 to 10 per hour) if the customer’s architecture genuinely requires it.\n\nFull technical information on OAuth 2.0 can be found at the following sites:\n* [Internet Engineering Task Force (IETF) OAuth 2.0 Authorization Framework Memo]( https://datatracker.ietf.org/doc/html/rfc6749)\n* [Aaron Parecki’s OAuth 2.0 Nuts and Bolts](https://oauth.net/2/)"
  },
  {
    "name": "Important Technical Notes",
    "description": "**Universally Unique Identifiers**\n\nA Universally Unique Identifier (UUID) is a 128-bit label used to uniquely identify objects in computer systems. UUIDs are standardized by the Open Software Foundation (OSF) as part of the Distributed Computing Environment (DCE). Many objects in the SBT platform follow the UUID format.\n\nSBT UUIDs follow the standard 8-4-4-4-12 format. Example: 44463f49-ad32-460d-956c-83849fc639a5\n\nCustomers must ensure that their systems can accept UUIDs in the format shown above.\n\nMore information on UUIDs is available here: https://commons.apache.org/sandbox/commons-id/uuid.html\n\n**Query Formatting**\n\nSBT uses standard REST API URIs. See the Endpoint URLs shown above.\n\nGeneral format: {Production or Staging Endpoint}/{API Path}&{variable=value}&{variable=value}. Include as many &{variable=value} appendices as necessary up to the API's maximum.\n\n*Examples*\n\nGet Phone Numbers Data: /phonenumbers-data\n\n{Production or Staging Endpoint}/phonenumbers-data&msisdn=12345678910&msisdn=13456789123\n\nGet Subscriber Status: /groups/subscribers/status\n\n{Production or Staging Endpoint}/groups/f0618891-6561-43fb-ae67-c84f5448cea7/subscribers/status&msisdn=12345678910\n&msisdn=13456789123&msisdn=14567891234&msisdn=15678912345&msisdn=16789123456\n\nMore examples will be added as this document evolves.**Date Formatting**\n\nDatetime objects from SBT servers are in ISO 8601 format (2025-03-07T18:51:29.9451124Z).\n\nIf the last character is *Z* for *Zulu*, that indicates UTC. Otherwise, as in the UI, times are given in whichever time zone is set for your computer."
  },
  {
    "name": "Legacy (1.0) to FinText (2.0) Equivalencies",
    "description": "For clients using the SBT Legacy platform, the table below shows the equivalent API calls between the Legacy and FinText platforms. Note that some functions spanning multiple 1.0 APIs has been combined into single 2.0 APIs.\n\n1.0 Name | 2.0 Name\n-|-\n[Authenticate API Key]( https://solutionsbytext.com/api-documentation/authenticate-api-key/) | [Authentication OAuth 2.0 Bearer Token]( https://developers.solutionsbytext.com/docs/t2c2.0/index.html#tag/Authentication) \n[Get Subscriber Status]( https://solutionsbytext.com/api-documentation/get-subscribers-status/) | [Get Subscriber Status]( #tag/Subscription/paths/~1groups~1{groupId}~1subscribers~1status/get) \n[Get Carrier Lookup]( https://solutionsbytext.com/api-documentation/get-carrier-lookup/) | [Get Phone Numbers Data]( #tag/PhoneNumbers/paths/~1phonenumbers-data/get) \n[Request VBT]( https://solutionsbytext.com/api-documentation/request-vbt/) | [Add Subscriber to a Group]( #tag/Subscription/paths/~1groups~1{groupId}~1subscribers/post) \n[Require VBT]( https://solutionsbytext.com/api-documentation/require-vbt/) | [Add Subscriber to a Group]( #tag/Subscription/paths/~1groups~1{groupId}~1subscribers/post) \n[Confirm VBT]( https://solutionsbytext.com/api-documentation/confirm-vbt/) | [Confirm Subscriber with PIN]( #tag/Subscription/paths/~1groups~1%7BgroupId%7D~1subscribers~1%7Bmsisdn%7D~1verification/post) \n[Send Message]( https://solutionsbytext.com/api-documentation/send-message/) | [Send Message to Subscribers]( #tag/Message/paths/~1groups~1%7BgroupId%7D~1messages/post) \n[Send Template Message]( https://solutionsbytext.com/api-documentation/send-template-message/) | [Send Template Message to Subscribers]( #tag/Message/paths/~1groups~1%7BgroupId%7D~1template-messages/post) \n[Update Subscriber]( https://solutionsbytext.com/api-documentation/update-subscriber/) | [Update Subscriber Data in a Brand]( #tag/Subscription/paths/~1v2~1groups~1%7BgroupId%7D~1subscribers/put) \n[Get Deactivation Numbers]( https://solutionsbytext.com/api-documentation/get-deactivation-numbers/) | [Get All Deactivation Events for an Account]( #tag/Report/paths/~1accounts~1deactevents/get) \n[Get ShortURL]( https://solutionsbytext.com/api-documentation/get-short-url/) | [Add SmartURL to Group]( #tag/SmartClick/paths/~1groups~1%7BgroupId%7D~1shortUrls/post) \n[Get ShortURL Report]( https://solutionsbytext.com/api-documentation/getshorturl-report/) | [Get All SmartURLs]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1shorturls/get) \n[Get ShortURL Details]( https://solutionsbytext.com/api-documentation/get-short-url-details/) | [Get All SmartURLs]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1shorturls/get) \n[Messages Sent]( https://solutionsbytext.com/api-documentation/messages-sent/) | [Get Sent Message Details]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1outbound-messages/get) \n[Messages Sent By Type]( https://solutionsbytext.com/api-documentation/messages-sent-by-type/) | [Get Sent Message Details]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1outbound-messages/get) \n[Inbound Messages]( https://solutionsbytext.com/api-documentation/inbound-messages/) | [Get Inbound Message Details]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1inbound-messages/get) \n[Inbound Messages By Type]( https://solutionsbytext.com/api-documentation/inbound-messages-by-type/) | [Get Inbound Message Details]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1inbound-messages/get) \n[UnSubscribe]( https://solutionsbytext.com/api-documentation/unsubscribe/) | [Delete Subscriber]( #tag/Subscription/paths/~1groups~1%7BgroupId%7D~1subscribers~1%7Bmsisdn%7D/delete) \n[Subscribers Report]( https://solutionsbytext.com/api-documentation/subscribers/) | [Get All Subscribers In a Group](#tag/Report/paths/~1groups~1%7BgroupId%7D~1subscribers?pageNumber=%7BpageNumber%7D&pageSize=%7BpageSize%7D/get) \n[Get Message Status]( https://solutionsbytext.com/api-documentation/get-message-status/) | [Get Sent Message Details]( #tag/Report/paths/~1groups~1%7BgroupId%7D~1outbound-messages/get) \n[MMS Retrieve]( https://solutionsbytext.com/api-documentation/mms-retrieve/) | [MMS Retrieve]( #tag/Message/paths/~1groups~1%7BgroupId%7D~1media-messages~1%7BmessageId%7D~1file~1%7BfileId%7D/get) \n[MMS Delete]( https://solutionsbytext.com/api-documentation/mms-delete/) | [MMS Delete]( #tag/Message/paths/~1groups~1%7BgroupId%7D~1media-messages~1%7BmessageId%7D~1file~1%7BfileId%7D/delete)"
  },
  {
    "name": "Other Resources",
    "description": "**HubSpot Resources**\n\n*You must be a registered SBT HubSpot user to view these pages*.\n* [**Glossary:**](https://go.solutionsbytext.com/knowledge/glossary-of-terms) An extensive list of terms separated by topic.\n* [**Knowledge Base:**](https://go.solutionsbytext.com/knowledge) The Knowledge Base has articles on our User Interface (UI) and File Processing Automation (FPA) options.\n\n**Other Redocly Documentation**\n* [**SBT Payments Platform:**](https://developers-staging.solutionsbytext.com/docs/payments/index.html) API documentation for the SBT Payments platform; for clients of both our FinText and Legacy platforms.\n* [**SBT TextIQ:**](https://developers.solutionsbytext.com/docs/textiq/api/v1/index.html) Our TextIQ API documentation, for Legacy 1.0 customers."
  },
  {
    "name": "Subscription",
    "description": "**APIs that provide information and allow operations on phone numbers and subscribers.**",
    "x-displayName": "APIs: Subscriptions"
  },
  {
    "name": "Message",
    "description": "**APIs that send messages to Subscribers and which perform other message-related actions.**\n\n**Important:** Please read and follow the the usage limits prescribed below for the Send Message APIs.",
    "x-displayName": "APIs: Messages"
  },
  {
    "name": "PhoneNumbers",
    "description": "**An API that performs carrier lookups.**",
    "x-displayName": "APIs: Phone Numbers"
  },
  {
    "name": "SmartClick",
    "description": "**These APIs create shortened URLs with extended features.**",
    "x-displayName": "APIs: SmartURL"
  },
  {
    "name": "Keyword",
    "description": "**An API that creates keywords within Groups.**",
    "x-displayName": "APIs: Keywords"
  },
  {
    "name": "Report",
    "description": "**APIs that provide maintenance and analysis reports.**\n\nReports may be generated for Accounts, Groups, messaging, and other platform features. Some APIs have extended descriptions for their functions; see below for more information.\n\n**Reporting Delays**\n\nPlease be aware of the following delays in reporting:\n* During non-peak hours, expect a delay of at most one minute. Data from that one minute will not be included in the reports.\n* During peak hours, that delay can reach up to 10 to 15 minutes. Report data in that window may not be included in the report.\n* Data which has not synchronized from the transactional database will not be available until the synchronization process is complete.",
    "x-displayName": "APIs: Reports"
  },
  {
    "name": "Template",
    "description": "**These APIs perform operations on message templates within a group.**",
    "x-displayName": "APIs: Templates"
  },
  {
    "name": "Webhook",
    "description": "Webhooks are automated processes which allow Clients to receive data for asynchronous events without constant monitoring for those events.\n\nWebhooks send a JSON payload to a target URL specified by the Client. The Client’s target URL is set up by the Client and given to SBT. SBT then sets the target URL as the destination for the webhook data. Clients decide how to use the JSON data; their developers may use it to automate processes, send alerts on errors, send automated emails, and so on.\n\nError messages for SBT webhooks are sent from the Client to SBT. They confirm that the webhook payload was received, or that an error was encountered.\n\n**Webhook IP Whitelisting**\n* Production/Live: 3.208.218.10, 44.197.56.28, 34.200.67.47\n* Staging/Testing: 34.239.213.6, 18.211.67.242\n\n**Best Practices**\n\nAvoid operations with heavy logic, like database operations, when receiving the webhook callback.\n\nSuccessful webhook implementations must be optimized for latency using asynchronous processes. The following sequence illustrates the concept:\n1.  Immediately accept webhook payloads from SBT.\n2.  Put webhook payloads into a queue. SBT recommends a persistent queue.\n3.  Respond back to SBT with a 2xx/Success status message as soon as possible.\n4.  Validate or process the webhook data. Examples: Inspect the JSON, write to a file or database.\n\n**Webhook Notification Precedence**\n\nThe SBT FinText Platform prioritizes webhooks notifications based on their organization level:\n1. Group\n2. Brand\n3. Account\n\n Notifications from Group webhooks take precedence over Brand webhook notification, and Account notifications have the lowest precedence. Please remember to account for this order when evaluating data from webhooks.\n\n**Webhook Blacklisting**\n\nTarget URLs for webhook payloads are set up by the client. If a target URL returns an error message to SBT indicating that a webhook payload failed, the following process occurs:\n1. The webhook sends two more payloads to the client’s target URL.\n2. After three failures—the initial failure and two more failed payload attempts—the target URL is suspended. Note: Webhook payloads will continue to be generated by SBT. The payloads will be queued by SBT for sending when the target URL is functioning properly.\n3. Suspended URLs are sent three payloads every thirty minutes. These payload attempts continue for a maximum of 100 hours (200 three-payload attempts, one three-payload attempt every 30 minutes).\n4. After 200 failed three-payload attempts, the target URL is deactivated in the SBT system. The client must ensure that the target URL is functional and contact SBT to have it reactivated.\n\nIf the target URL successfully receives payloads during the second or third attempts described in Step 2 above, then SBT will retry all payloads which queued during the failures, including those from previous days.\n\n*Important Notes*\n* Clients have the responsibility to ensure that their target URLs are functioning properly.\n* Only the webhook payloads from SBT to the client are affected in the process outlined above. \n* Messages will continue to be sent from the client to subscribers, even if the target URL is deactivated.\n* Once a target URL is reactivated , all queued payloads are deleted from the SBT system.\n\n![Org Structure](images/webhook-flow-4.png)",
    "x-displayName": "APIs: Webhooks"
  },
  {
    "name": "Status Codes",
    "description": "Status Codes and ActionsSome status codes have extended descriptions with information on why a code is sent and the actions clients should take. Please see our [KB article on Extended Status Code Descriptions]( https://go.solutionsbytext.com/knowledge/extended-status-codes). That article is also linked in the relevant status codes below: 99, 101, 102, and 200.\n\nStatus Code | API Description | UI Description | SBT Automatic Actions | Client Actions \n-|-|-|-|- \n-1 | Unknown Carrier | Message Queued | None | None \n99 | Your message has been queued in the Platform | Message Queued | None | None; [click here for more detail]( https://go.solutionsbytext.com/knowledge/extended-status-codes). \n100 | Message was successfully delivered | Delivered | None | None \n101 | Message was successfully delivered to the carrier | Sent to carrier | None | None; [click here for more detail]( https://go.solutionsbytext.com/knowledge/extended-status-codes). \n102 | The message has been queued for delivery to the carrier | Queued to carrier | None | None; [click here for more detail]( https://go.solutionsbytext.com/knowledge/extended-status-codes). \n110 | Stopfail - Not a Subscriber | Stopfail - Not a Subscriber | None | This phone number has never been opted in. To send them text messages, the phone number will need to go through the opt-in process. \n111 | Stopfail - Inactive Subscriber | Stopfail - Inactive Subscriber | Phone number unsubscribed by SBT. | This phone number has been unsubscribed on the SBT platform using one of the opt-out methods. Unsubscribe the number on your platform and on the SBT platform. \n112 | Stopfail - Blocked Subscriber | Stopfail - Blocked Subscriber | None | A phone number SBT has blocked from the platform. Unsubscribe the number on your platform and on the SBT platform. \n113 | StopFail - Carrier Not Supported | StopFail - Carrier Not Supported | This will roll to DualDelivery™ on a Long Code (Only applicable for accounts with DSC and 10DLC). | None \n114 | StopFail - Invalid Number | StopFail - Invalid Number | None | Unsubscribe the number on your platform and on the SBT platform. \n115 | StopFail - Landline Number | StopFail - Landline Number | None | Unsubscribe the number on your platform and on the SBT platform. \n116 | StopFail - VBT In Process | StopFail - VBT In Process | None | If using the PIN or Reply Yes opt-in method, these are numbers which have not completed the opt-in process. The customer must provide the PIN or reply YES. \n120 | StopFail – Non-FTEU Carrier | StopFail – Non-FTEU Carrier | None | Unsubscribe the number on your platform and on the SBT platform. \n200 | The message was undeliverable and no explanation was provided from the carrier | Undeliverable | None | Retry; After 3 fails, unsubscribe the number on your platform and on the SBT platform. [Click here for more detail](  https://go.solutionsbytext.com/knowledge/extended-status-codes). \n201 | The carrier has blocked SMS traffic to the handset | Blocked Number | This will roll to DualDelivery™ on a Long Code (only applicable for accounts with DSC and 10DLC). | None \n203 | The phone number is no longer in service | Deactivated Number | SBT will unsubscribe the phone number from the platform the following day during the nightly deactivations. | Unsubscribe the number on your platform and also on the SBT platform. \n204 | No message content provided, message was too long, or message contained invalid characters | Invalid content | None | Follow up with SBT Client Consultant to reevaluate message template. \n205 | The phone number belongs to a country that is not supported | Unsupported Country | None | Unsubscribe the number on your platform and also on the SBT platform. \n206 | The carrier was unable to forward the message to the handset | Unable to forward | This will roll to DualDelivery on a Long Code (Only applicable for accounts with DSC and 10DLC) | None \n208 | The carrier ID provided was invalid | Invalid carrier | Customer has changed carriers; SBT will deliver on new carrier. | Please retry; After 3 fails, unsubscribe the number on your platform and on the SBT platform. \n209 | Carrier Not Found | Carrier Not Found | None | Unsubscribe the number on your platform and on the SBT platform. \n210 | Subscriber insufficient credits | Subscriber insufficient credits | None | The subscriber—the end user/consumer—must buy more service credits from their carrier. \n211 | Invalid destination address | Invalid destination address | None | Retry. After 3 failed attempts, unsubscribe the number on your platform and the SBT platform. [Click here for more detail](  https://go.solutionsbytext.com/knowledge/extended-status-codes) \n212 | Message content blocked | Block - Review | None | Do not reattempt. Follow up with SBT support. \n213 | Message blocked, unsubscribe | Block - Unsubscribe | None | Retry. Do not reattempt. Unsubscribe. \n214 | Blocked due multiple identical or similar messages within an hour to the same subscriber | Flood Filter | None | Retry submit after 24 hours. \n404 | System Error | Temporary system error by carrier | None | Retry submit after 24 hours. \n408 | A provided parameter was invalid | Invalid parameter | None | Follow up with SBT Technical Support. \n409 | Account misconfiguration detected | Config error | None | Follow up with your SBT Customer Success Manager to check org codes. \n410 | Carrier not supported by aggregator / No delivery route defined for carrier | Invalid route | None | Unsubscribe the number on your platform and on the SBT platform. \n411 | Carrier TPS Rate Exceeded | Carrier TPS Rate Exceeded | None | Retry campaign. \n412 | Carrier Daily Volume Exceeded | Carrier Daily Volume Exceeded | None | Retry campaign after 24 hours. \n572 | Campaign information is not provisioned for this carrier or is not active | Campaign not provisioned | This will roll to DualDelivery™ on a Long Code (Only applicable for accounts with DSC and 10DLC) | None \n800 | Message undeliverable due to restriction in communication code used | LC_Replaced | None | Follow up with SBT Technical Support."
  },
  {
    "name": "Error Codes",
    "description": "The APIs use standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:\n\nApp Code  | Description\n-|-\n-1| Downstream server error\nbrd.1001 | BrandId is required \nbrd.1002 | Invalid BrandId \nbrd.1003 | Consent category is not associated to brand \nbrd.1005 | Brand level optin is not enabled for this brand. Please contact the support team. \nbrd.1006 | Brand configured incorrectly \ndea.1001 | To Date must be greater than From Date \ndea.1002 | Current Date must be greater than To Date \ndea.1003 | Invalid Event Type \ndea.1004 | Unsupported CountryCode \ndea.1005 | Event type required \ngen.1200 | Request successful \ngen.1401 | Unauthorized \ngen.1403 | Access forbidden \ngen.1404 | Resource not found \ngen.1412 | Precondition Failed \ngen.1500 | Internal Error \ngrp.1001 | GroupId is required \ngrp.1002 | Invalid GroupId \ngrp.1003 | Consent category is not associated to group \ngrp.1004 | Group creation is not proper \nkwd.1005 | Keyword is required \nkwd.1011 | Keyword is not available \nmsg.1030 | Message is required \nmsg.1032 | Please enter from field. \nmsg.1033 | Message type is invalid. \nmsg.1035 | Scheduled time should be greater than 15 minutes from current time \nmsg.1042 | Message ID is required \nmsg.1043 | File id is required \nmsg.1044 | File not found \nmsg.1046 | Content type is not supported \nmsg.1047 | Content Size is greater than maximum allowed size \nmsg.1049 | Malformed content received in Base 64 format. Unable to decode. \nmsg.1051 | File extension not supported \nmsg.1052 | Timeout when accessing URL \nmsg.1052 | Timeout when accessing URL. Status code = {{status code}} \nmsg.1053 | Error encountered when accessing URL \nmsg.1053 | Error encountered when accessing URL. Status code = {{status code}} \nmsg.1055 | MMS messages can be sent to a maximum of 100 subscribers \nmsg.1056 | Broadcast message does not support MMS \nmsg.1059 | Scheduled time should be within 7 days of current time \nmsg.1061 | TemplateName does not exist in the group \nmsg.1064 | Invalid scheduledatetime. The value cannot be null, empty, or default. \nphn.1001 | Phone number required \nphn.1002 | Phone number more than 10 characters \nrpt.1001 | From Date cannot be greater than To Date \nrpt.1002 | Report maximum is 60 days \nrpt.1003 | Report maximum is 60 days \nslk.1001| Long URL is required \nslk.1002| ShortURL setting should be enabled \nslk.1006| Short URL is required \nslk.1007| Only HTTPS URLs are supported in the long url field \nslk.1009| Custom short url not found \nslk.1010| Invalid URI \nslk.1011| Custom URL suffix length must be greater than 2 characters and less than 10 characters \nslk.1012| Only alphanumeric characters, hyphen ('-') and underscore ('_')  are allowed in custom URL suffix \nslk.1016 | To Date must be greater than From Date \nsub.1013 | Mobile number is invalid \nsub.1019 | Subscriber exist \nsub.1139 | Mobile numbers are required \nsub.1140 | Maximum of 50 mobile numbers are allowed \nsub.1142 | Invalid or expired pin \nsub.1143 | Verification type is not allowed. \nsub.1144 | Mobile number is required \nsub.1145 | PIN is required \nsub.1146 | Subscriber not found \nsub.1147 | To Date must be greater than From Date \nsub.1148 | Customparams name should be mandatory. \nsub.1149 | Properties name should be mandatory. \ntml.1036 | TemplateId is required \ntml.1037 | TemplateId does not exist in the group "
  }
]